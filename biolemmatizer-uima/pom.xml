<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>biolemmatizer</artifactId>
		<groupId>edu.ucdenver.ccp</groupId>
		<version>1.2</version>
	</parent>
	<artifactId>biolemmatizer-uima</artifactId>

	<properties>
		<jcasgen.typesystem>edu/ucdenver/ccp/nlp/biolemmatizer/uima/TypeSystem.xml</jcasgen.typesystem>
		<jcasgen.test.typesystem>edu/ucdenver/ccp/nlp/biolemmatizer/uima/TestTypeSystem.xml</jcasgen.test.typesystem>
	</properties>

	<dependencies>
		<!-- listing commons-io v2.0 b/c v1.4 is imported by default by uimafit -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.7</version>
		</dependency>
		<dependency>
			<groupId>edu.ucdenver.ccp</groupId>
			<artifactId>biolemmatizer-core</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.uima</groupId>
			<artifactId>uimaj-core</artifactId>
			<version>2.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.uimafit</groupId>
			<artifactId>uimafit</artifactId>
			<version>1.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.uima</groupId>
			<artifactId>uimafit-core</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.uima</groupId>
			<artifactId>uimafit-cpe</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.uima</groupId>
			<artifactId>uimafit-legacy-support</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>edu.ucdenver.ccp</groupId>
			<artifactId>ccp-uima-shims</artifactId>
			<version>0.1</version>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>bionlp-sourceforge</id>
			<url>http://svn.code.sf.net/p/bionlp/code/repo/</url>
		</repository>
	</repositories>

	<!-- Many thanks to the ClearTK and UimaFIT projects for demonstrating how 
		to dynamically run jcasgen using Maven (See plugins below) -->
	<build>
		<plugins>
			<plugin>
				<!-- This plugin increases the size of the allocated Java Heap during 
					unit testing -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<argLine>-Xmx1024m</argLine>
				</configuration>
			</plugin>
			<plugin>
				<!-- This plugin generates java files with JCasGen -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<id>run-jcasgen</id>
						<phase>process-resources</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>org.uimafit.util.JCasGenPomFriendly</mainClass>
							<arguments>
								<argument>file:${project.basedir}/src/main/resources/${jcasgen.typesystem};file:${project.basedir}/src/test/resources/${jcasgen.test.typesystem}
								</argument>
								<argument>${project.build.directory}/generated-sources/jcasgen</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin><!-- This plugin adds the jcasgen generated source code folder 
					as a project source folder -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<id>add-jcasgen-sources-${project.artifactId}</id>
						<phase>process-resources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/jcasgen</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>